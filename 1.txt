我这里有一份源码，但要按照新要求修正一下，下面是改过的新要求，但有部分删改：
该程序用于实时监控币安所有 USDT 合约交易对的市场行情，通过价格波动和成交量变化触发 Telegram 提醒，提醒内容包含动态的价格变动情况、24 小时涨跌幅、流入/流出比例等信息。以下为详细需求说明。

---

### 1. 监控范围

- **监控交易对**：所有币安合约中以 **USDT** 计价的交易对。交易对通过币安RESTAPI获取
- **数据源**：通过币安合约 WebSocket API 订阅 aggTrade 数据流获取所有 USDT 交易对的实时成交信息，需要的数据有：成交价格、成交的代币数量，以及买入还是卖出方向。
***数据每分钟自动清除重新计算

---

### 2. 触发条件

#### 2.1 价格波动与成交量条件触发提醒

- **价格波动监控**：在 1 分钟内，若某交易对价格相较于 1 分钟前的价格波动达到 **±0.5% 或以上**。
- **成交量条件**：在价格波动满足条件的同时，买卖双方成交量占比较大的一方的资金量（以 USDT 计）超过 **30,000 USDT**。
    - 注意：币安的成交数据是以交易代币数量给出的，需要从对应的订单数据中同时获取交易价，然后将其换算为 USDT 进行成交量统计。
- **触发提醒**：同时满足以上两个条件后，立即触发 Telegram 提醒（提醒格式将在下面的对话中给出）。
触发提醒后，要记录当次触发时的价格，便于2.2连续触发规则调用

#### 2.2 连续触发规则

- 在提醒后的 **1 分钟内**，若再次满足 **±0.5% 或以上** 的价格波动，且成交量条件依旧满足，则再次触发提醒（提醒格式将在下面的对话中给出）：
    - 若此提醒触发时间距上次提醒少于 1 分钟，显示具体的相隔秒数（例如“12 秒”）。
    - 若此提醒触发时间距上次提醒已超过 1 分钟，显示 “1 min” 而非秒数。
   若2.1条件触发后再次触发，不重置1 分钟内的监控时间，但也要同时记录这次提醒时的时间而且要再次记录这一次触发的价格，如果再次触发时则用上次的触发价得出涨跌幅，否则会产生前一秒提醒后，后一秒又提醒一遍，所以这是为了防止反复提醒
- 若 1 分钟内没有再次触发规则条件，则重新回到1分钟监控周期。

2.3 每 小时涨跌幅监控
- **整点记录基准价**：按照 UTC 时间，每小时开始时（如 00:00、01:00 等）记录每个监控交易对的价格，作为该小时的基准价格。
- **1 小时涨跌幅条件**：在该小时内，当某交易对价格相对整点基准价格发生 **±2.0% 或以上** 的波动时触发提醒。
触发提醒后触发提醒的代币交易对就该个小时内不再触发涨跌幅监控，直到下一小时再重新开始监控流程
- **提醒内容**：显示触发提醒时距离该小时整点开始的分钟数（例如“12 min change”表示当前提醒触发时间距离整点基准价记录时间 12 分钟时达到了 2.0% 的涨跌幅）。（提醒格式将在下面的对话中给出）的模块看


- **价格和成交量换算**：所有成交量数据需要转换为 USDT 计价。
- **时间格式**：使用 UTC 时间进行时间戳和间隔计算。
2.3若触发提醒后这个小时内触发的代币交易对就不再触发1小时涨跌幅监控，直到下一小时再重新开始监控流程，还有2、触发条件中，2.1条件触发提醒后，要记录触发时的价格，便于2.2连续触发规则调用，- 在提醒后的 **1 分钟内**，若再次满足 **±0.5% 或以上** 的价格波动，且成交量条件依旧满足，则再次触发提醒：
    - 若此提醒触发时间距上次提醒少于 1 分钟，显示具体的相隔秒数（例如“12 秒”）。
    - 若此提醒触发时间距上次提醒已超过 1 分钟，显示 “1 min” 而非秒数。
   再次触发后，不重置时间，但是要再次记录触发的价格，防止反复提醒
- 若 1 分钟内没有再次触发条件，则重新回到每分钟监控周期，注意：币安的成交数据是以交易代币数量给出的，需要将其换算为 USDT 进行成交量统计


### 4. 24 小时涨跌幅计算

- **数据来源**：通过RESTAPI获取24hr涨跌幅
- 注意：由于仅在消息提示时有用。

---

### 5. WebSocket 连接管理
-----不使用币安APIKEY，只使用公开接口
- **数据断线恢复**：当 WebSocket 断线时，需重新从RESTAPI获取具体的交易对数据，然后重连并重新订阅所有交易对的 aggTrade （注：要重新获取所有交易对，交易对数据通过币安RESTAPI获取）
市场数据连接
本篇所列出的所有wss接口需用下列方式连接：

Base Url：wss://fstream.binance.com
订阅单一stream格式为 /ws/<streamName>
组合streams的URL格式为 /stream?streams=/<streamName1>/<streamName2>/<streamName3>
连接样例：
wss://fstream.binance.com/ws/bnbusdt@aggTrade
wss://fstream.binance.com/stream?streams=bnbusdt@aggTrade/btcusdt@markPrice
订阅组合streams时，事件payload会以这样的格式封装 {"stream":"<streamName<","data":<rawPayload>}

stream名称中所有交易对均为小写。

每个链接有效期不超过24小时，请妥善处理断线重连。

服务端每3分钟会发送ping帧，客户端应当在10分钟内回复pong帧，否则服务端会主动断开链接。允许客户端发送不成对的pong帧(即客户端可以以高于15分钟每次的频率发送pong帧保持链接)。

Websocket服务器每秒最多接受10个订阅消息。

如果用户发送的消息超过限制，连接会被断开连接。反复被断开连接的IP有可能被服务器屏蔽。

单个连接最多可以订阅 200 个Streams。
  
---

### 6. Debug 功能

- 程序需提供详细的调试信息输出，以便查看实时数据和交易对状态，包括：
  - 当前监控的交易对列表
  - 每个交易对的最新价格、成交量数据
  - 各类条件是否满足及触发详情

---

### 7. 消息格式

Telegram 消息提醒格式如下：

#### 7.1 价格波动 & 成交量提醒

消息格式为：

$<代币名称> | #<交易对>
Price: <当前价格> (<24小时涨跌幅>)
└ <时间间隔> change: <涨跌幅度> 📈/📉
<总成交量> USDT traded in <时间间隔>
└ 流入/流出: <流入或流出量> USDT [占比] 🟢/🔴
24h Vol: <24小时成交量> USDT
1小时预警数: <预警数> 🌟/💥


**说明**：
- <代币名称>：交易对中的代币符号，例如“MASK”。
- <交易对>：交易对名称，例如“MASK_USDT”。
- <当前价格>：触发提醒时的最新成交价格。
- <24小时涨跌幅>：根据 RESTAPI获取的。
- <时间间隔>：若为初次触发则为 “1 min”；若在 1 分钟内再次触发则显示与上次提醒间隔的秒数（如“12 秒”）；若超过 1 分钟则重新显示为 “1 min”。
- <涨跌幅度>：触发提醒时的涨跌幅度，并根据涨或跌显示 📈/📉。
- <总成交量>：在 <时间间隔> 内的累计成交量，以 USDT 计,要简略写超过1000 就要用k单位，以此类推。
- <流入或流出量>：在 <总成交量> 中占比大的一方（买/卖）的成交量，并显示占比。买方占比大则显示 🟢“流入”，卖方占比大则显示 🔴“流出”。
- <24小时成交量>：24 小时内的总成交量，通过RESTAPI获取。,要简略写超过1000 就要用k单位，以此类推。
- <预警数>：1 小时内的累计预警数，在预警数后面依次用星星（🌟）图标显示（随预警数增多而递增）。当预警数达到 4 次时则🌟图标替换为单一显示 💥（爆炸）图标。

#### 示例：

$MASK | #MASK_USDT
Price: 2.381 (+4.7% in 24h)
└ 12 min change: +2.0% 📈
339.81K USDT traded in 12 min
└ 流入: 219.77K USDT [65%] 🟢
24h Vol: 18.55M USDT
1小时预警数: 2 🌟🌟

### 8. 开发注意事项

- **数据断线恢复**：当 WebSocket 断线时，需自动重连并重新订阅所有交易对的 aggTrade 和 miniTicker 数据流。
----消息格式要严格按照我给的格式，不能肆意修改

